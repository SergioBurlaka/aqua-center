services:
  postgres:
    image: postgres:15
    container_name: aqua-postgres
    restart: always
    environment:
      POSTGRES_USER: aqua_user
      POSTGRES_PASSWORD: aqua_pass
      POSTGRES_DB: aqua_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/initdb/00-restore-backup.sh:/docker-entrypoint-initdb.d/00-restore-backup.sh:ro
      - ./backup.sql:/backup/backup.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aqua_user -d aqua_db || pg_isready -U aqua_user -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 5s
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.server
    container_name: aqua-server
    restart: always
    ports:
      - "4000:4000"
    environment:
      DATABASE_URL: postgres://aqua_user:aqua_pass@postgres:5432/aqua_db
      JWT_SECRET: change-me-dev-secret
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    build:
      context: ./client
      dockerfile: Dockerfile.client   # <-- multi-stage build for React + nginx
    container_name: aqua-nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
